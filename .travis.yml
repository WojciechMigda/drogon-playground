language: cpp
dist: xenial

branches:
  only:
    - master

env:
  global:
    # Ubuntu version
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    # Linux/gcc
    # https://launchpad.net/~ubuntu-toolchain-r/+archive/ubuntu/test/+packages
    - os: linux
      env: COMPILER=g++-7
    - os: linux
      env: COMPILER=g++-8

  fast_finish: true




install:
  - |
    case ${COMPILER} in
      g++-[6789])
        travis_retry sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        travis_retry sudo apt-get -qq update
        travis_retry sudo apt-get -qy install "${COMPILER}"
        ;;
      clang++-*)
        CLANG_VERSION=${COMPILER/clang++}
        if [[ ${CLANG_VERSION} != "-3."* ]]; then
          wget -O - "https://apt.llvm.org/llvm-snapshot.gpg.key" | sudo apt-key add -
          travis_retry sudo add-apt-repository -y "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial${CLANG_VERSION/-7} main"
        fi
        travis_retry sudo apt-get -qq update
        travis_retry sudo apt-get -qy install "clang${CLANG_VERSION}"
        ;;
    esac
  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
#  - CMAKE_VERSION=3.10.2
#  - |
#    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
#      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
#      mkdir -p ${DEPS_DIR}/cmake
#      travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
#      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
#    else
#      brew install cmake || brew upgrade cmake
#    fi
#    cmake --version
  - sudo apt install libjsoncpp-dev uuid-dev

before_script:
  - if [[ ${TRAVIS_OS_NAME} == linux ]]; then export NODE_LABELS="Linux Ubuntu Ubuntu-16.04"; fi
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then export NODE_LABELS="OSX OSX-${OSX_VERSION}"; fi
  - if [[ -n ${COMPILER} ]]; then export CXX=${COMPILER}; fi
  - ${CXX:-c++} --version
  - ${CXX:-c++} -march=native -E -v - </dev/null 2>&1 | grep cc1

script:
  - pushd drogon && mkdir build
  - git submodule update --init
  - pushd build
  - cmake -DCMAKE_CXX_COMPILER=${CXX:-c++} -DCMAKE_BUILD_TYPE=Release ..
  - make drogon_ctl
  #- cmake --build .
  #- sudo make install
  - popd
  - popd

  - drogon/build/drogon_ctl/drogon_ctl create project static_page
  - cp static_page_changes/* static_page
  - pushd static_page/build
  - cmake -DCMAKE_CXX_COMPILER=${CXX:-c++} -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build .
  - echo '<h1>Hello Drogon!</h1>' >> index.html
  - ( ./static_page ) & sleep 5 ; pkill static_page
  - popd
